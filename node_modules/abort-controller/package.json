{
  "_args": [
    [
      "abort-controller@^3.0.0",
      "/home/patrickkfkan/dev/volumio/ytcr/node_modules/yt-cast-receiver"
    ]
  ],
  "_from": "abort-controller@>=3.0.0 <4.0.0",
  "_hasShrinkwrap": false,
  "_id": "abort-controller@3.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/abort-controller",
  "_nodeVersion": "10.15.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/abort-controller_3.0.0_1553937332170_0.05540466600948468"
  },
  "_npmUser": {
    "email": "star.ctor@gmail.com",
    "name": "mysticatea"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "name": "abort-controller",
    "raw": "abort-controller@^3.0.0",
    "rawSpec": "^3.0.0",
    "scope": null,
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/yt-cast-receiver"
  ],
  "_resolved": "https://registry.npmjs.org/abort-controller/-/abort-controller-3.0.0.tgz",
  "_shasum": "eaf54d53b62bae4138e809ca225c8439a6efb392",
  "_shrinkwrap": null,
  "_spec": "abort-controller@^3.0.0",
  "_where": "/home/patrickkfkan/dev/volumio/ytcr/node_modules/yt-cast-receiver",
  "author": {
    "name": "Toru Nagashima",
    "url": "https://github.com/mysticatea"
  },
  "browser": "./browser.js",
  "bugs": {
    "url": "https://github.com/mysticatea/abort-controller/issues"
  },
  "dependencies": {
    "event-target-shim": "^5.0.0"
  },
  "description": "An implementation of WHATWG AbortController interface.",
  "devDependencies": {
    "@babel/core": "^7.2.2",
    "@babel/plugin-transform-modules-commonjs": "^7.2.0",
    "@babel/preset-env": "^7.3.0",
    "@babel/register": "^7.0.0",
    "@mysticatea/eslint-plugin": "^8.0.1",
    "@mysticatea/spy": "^0.1.2",
    "@types/mocha": "^5.2.5",
    "@types/node": "^10.12.18",
    "assert": "^1.4.1",
    "codecov": "^3.1.0",
    "dts-bundle-generator": "^2.0.0",
    "eslint": "^5.12.1",
    "karma": "^3.1.4",
    "karma-chrome-launcher": "^2.2.0",
    "karma-coverage": "^1.1.2",
    "karma-firefox-launcher": "^1.1.0",
    "karma-growl-reporter": "^1.0.0",
    "karma-ie-launcher": "^1.0.0",
    "karma-mocha": "^1.3.0",
    "karma-rollup-preprocessor": "^7.0.0-rc.2",
    "mocha": "^5.2.0",
    "npm-run-all": "^4.1.5",
    "nyc": "^13.1.0",
    "opener": "^1.5.1",
    "rimraf": "^2.6.3",
    "rollup": "^1.1.2",
    "rollup-plugin-babel": "^4.3.2",
    "rollup-plugin-babel-minify": "^7.0.0",
    "rollup-plugin-commonjs": "^9.2.0",
    "rollup-plugin-node-resolve": "^4.0.0",
    "rollup-plugin-sourcemaps": "^0.4.2",
    "rollup-plugin-typescript": "^1.0.0",
    "rollup-watch": "^4.3.1",
    "ts-node": "^8.0.1",
    "type-tester": "^1.0.0",
    "typescript": "^3.2.4"
  },
  "directories": {},
  "dist": {
    "fileCount": 14,
    "integrity": "sha512-h8lQ8tacZYnR3vNQTgibj+tODHI5/+l06Au2Pcriv/Gmet0eaj4TwWH41sO9wnHDiQsEj19q0drzdWdeAHtweg==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcnzO1CRA9TVsSAnZWagAAs10P/20xivQdsRm6gflVA859\nYwo5AeQw8DpGHo9qd7tKsf+cjZdPVpsrw2iyeh/vd1nVqu0tnTY2QKqT5aL7\nHmboz4YmD6tLtqYK0USGnuXjzeDi6AZkxh+5z6NdLeVs/GGbyB3MjSC2BymQ\np2Wb0eoi8jaYBQHCtkaZZuNSESvn5o6h8PE5EKlLXK272IpHxrlJM1KMlk+G\n+bDBb0S00tJ1d7SI05u2lzyKH3oT6SR7fm41d03lCmw9EIHIhMKYhz0g+Bye\nzCV7W/ir0pzPX7YQnb9DyGlBCtsb2wcBnWJtSptc7vFO1212sRk7AURXu8Jb\nYF6O/hYrheE37vC87VlRSUMbYglwB75Sgr9uYWxapL9HHcSjR0yvgneGOzh1\nqI+msvAgJMkvGgHXOsD/RINYGwa0whCsSeNi4m6zx5qWi7sVWlqPP3fuovHV\nQjY/GioEkJz/xQm6gLiaGuL8WagFx+NixICnE/Cwr9oEfnb/x+A3itt9FO87\nDtFPZ6JNtAhumP/UUViQRgTOHak5FuUET9un6051CPwgIKEL/vSDgqne01D4\npw1YV+YFmWbLgVX8XMuU5TSrtvopiHunIqFL8I/gqt/9tcs3v29LgUd5Ff2S\nr4eTvqcfwV4OoUgh+tlS6QCoULwzdOLrdGROet2mHdL3J0kLqWTg/l91yTWP\n3ewt\r\n=LX6w\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "eaf54d53b62bae4138e809ca225c8439a6efb392",
    "tarball": "https://registry.npmjs.org/abort-controller/-/abort-controller-3.0.0.tgz",
    "unpackedSize": 76297
  },
  "engines": {
    "node": ">=6.5"
  },
  "gitHead": "a935d38e09eb95d6b633a8c42fcceec9969e7b05",
  "homepage": "https://github.com/mysticatea/abort-controller#readme",
  "keywords": [
    "abort",
    "abortcontroller",
    "abortsignal",
    "cancel",
    "controller",
    "event",
    "events",
    "shim",
    "signal",
    "w3c",
    "whatwg"
  ],
  "license": "MIT",
  "main": "dist/abort-controller",
  "maintainers": [
    {
      "name": "mysticatea",
      "email": "star.ctor@gmail.com"
    }
  ],
  "name": "abort-controller",
  "optionalDependencies": {},
  "readme": "# abort-controller\n\n[![npm version](https://img.shields.io/npm/v/abort-controller.svg)](https://www.npmjs.com/package/abort-controller)\n[![Downloads/month](https://img.shields.io/npm/dm/abort-controller.svg)](http://www.npmtrends.com/abort-controller)\n[![Build Status](https://travis-ci.org/mysticatea/abort-controller.svg?branch=master)](https://travis-ci.org/mysticatea/abort-controller)\n[![Coverage Status](https://codecov.io/gh/mysticatea/abort-controller/branch/master/graph/badge.svg)](https://codecov.io/gh/mysticatea/abort-controller)\n[![Dependency Status](https://david-dm.org/mysticatea/abort-controller.svg)](https://david-dm.org/mysticatea/abort-controller)\n\nAn implementation of [WHATWG AbortController interface](https://dom.spec.whatwg.org/#interface-abortcontroller).\n\n```js\nimport AbortController from \"abort-controller\"\n\nconst controller = new AbortController()\nconst signal = controller.signal\n\nsignal.addEventListener(\"abort\", () => {\n    console.log(\"aborted!\")\n})\n\ncontroller.abort()\n```\n\n> https://jsfiddle.net/1r2994qp/1/\n\n## üíø Installation\n\nUse [npm](https://www.npmjs.com/) to install then use a bundler.\n\n```\nnpm install abort-controller\n```\n\nOr download from [`dist` directory](./dist).\n\n- [dist/abort-controller.mjs](dist/abort-controller.mjs) ... ES modules version.\n- [dist/abort-controller.js](dist/abort-controller.js) ... Common JS version.\n- [dist/abort-controller.umd.js](dist/abort-controller.umd.js) ... UMD (Universal Module Definition) version. This is transpiled by [Babel](https://babeljs.io/) for IE 11.\n\n## üìñ Usage\n\n### Basic\n\n```js\nimport AbortController from \"abort-controller\"\n// or\nconst AbortController = require(\"abort-controller\")\n\n// or UMD version defines a global variable:\nconst AbortController = window.AbortControllerShim\n```\n\nIf your bundler recognizes `browser` field of `package.json`, the imported `AbortController` is the native one and it doesn't contain shim (even if the native implementation was nothing).\nIf you wanted to polyfill `AbortController` for IE, use `abort-controller/polyfill`.\n\n### Polyfilling\n\nImporting `abort-controller/polyfill` assigns the `AbortController` shim to the `AbortController` global variable if the native implementation was nothing.\n\n```js\nimport \"abort-controller/polyfill\"\n// or\nrequire(\"abort-controller/polyfill\")\n```\n\n### API\n\n#### AbortController\n\n> https://dom.spec.whatwg.org/#interface-abortcontroller\n\n##### controller.signal\n\nThe [AbortSignal](https://dom.spec.whatwg.org/#interface-AbortSignal) object which is associated to this controller.\n\n##### controller.abort()\n\nNotify `abort` event to listeners that the `signal` has.\n\n## üì∞ Changelog\n\n- See [GitHub releases](https://github.com/mysticatea/abort-controller/releases).\n\n## üçª Contributing\n\nContributing is welcome ‚ù§Ô∏è\n\nPlease use GitHub issues/PRs.\n\n### Development tools\n\n- `npm install` installs dependencies for development.\n- `npm test` runs tests and measures code coverage.\n- `npm run clean` removes temporary files of tests.\n- `npm run coverage` opens code coverage of the previous test with your default browser.\n- `npm run lint` runs ESLint.\n- `npm run build` generates `dist` codes.\n- `npm run watch` runs tests on each file change.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mysticatea/abort-controller.git"
  },
  "scripts": {
    "build": "run-s -s build:*",
    "build:dts": "dts-bundle-generator -o dist/abort-controller.d.ts src/abort-controller.ts && ts-node scripts/fix-dts",
    "build:rollup": "rollup -c",
    "clean": "rimraf .nyc_output coverage",
    "codecov": "codecov",
    "coverage": "opener coverage/lcov-report/index.html",
    "lint": "eslint . --ext .ts",
    "postversion": "git push && git push --tags",
    "preversion": "npm test",
    "test": "run-s -s lint test:*",
    "test:karma": "karma start --single-run",
    "test:mocha": "nyc mocha test/*.ts",
    "version": "npm run -s build && git add dist/*",
    "watch": "run-p -s watch:*",
    "watch:karma": "karma start --watch",
    "watch:mocha": "mocha test/*.ts --require ts-node/register --watch-extensions ts --watch --growl"
  },
  "version": "3.0.0"
}
