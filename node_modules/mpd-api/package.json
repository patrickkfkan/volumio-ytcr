{
  "_args": [
    [
      "github:patrickkfkan/mpd-api#node8-compat",
      "/home/patrickkfkan/dev/volumio/ytcr"
    ]
  ],
  "_from": "patrickkfkan/mpd-api#node8-compat",
  "_id": "mpd-api@1.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/mpd-api",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/patrickkfkan/mpd-api/node8-compat/package.json",
      "gitUrl": "git://github.com/patrickkfkan/mpd-api.git#node8-compat",
      "httpsUrl": "git+https://github.com/patrickkfkan/mpd-api.git#node8-compat",
      "shortcut": "github:patrickkfkan/mpd-api#node8-compat",
      "ssh": "git@github.com:patrickkfkan/mpd-api.git#node8-compat",
      "sshUrl": "git+ssh://git@github.com/patrickkfkan/mpd-api.git#node8-compat",
      "type": "github"
    },
    "name": null,
    "raw": "github:patrickkfkan/mpd-api#node8-compat",
    "rawSpec": "github:patrickkfkan/mpd-api#node8-compat",
    "scope": null,
    "spec": "github:patrickkfkan/mpd-api#node8-compat",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/patrickkfkan/mpd-api.git#e54cde2f951ef8d67390da4b36e75e3e55cba8c8",
  "_shasum": "b992b2193fa1563663120525c9ce361357512cb9",
  "_shrinkwrap": null,
  "_spec": "github:patrickkfkan/mpd-api#node8-compat",
  "_where": "/home/patrickkfkan/dev/volumio/ytcr",
  "author": {
    "email": "cotkocot@gmail.com",
    "name": "Cotko"
  },
  "bugs": {
    "url": "https://github.com/cotko/mpd-api/issues"
  },
  "dependencies": {
    "array-flat-polyfill": "^1.0.1",
    "debug": "^4.2.0",
    "file-type": "^15.0.1",
    "mpd2": "^1.0.4"
  },
  "description": "MPD api module for Node.js",
  "devDependencies": {
    "standard": "^12.0.1",
    "x-ray": "^2.3.4"
  },
  "engines": {
    "node": ">=11.0.0"
  },
  "gitHead": "e54cde2f951ef8d67390da4b36e75e3e55cba8c8",
  "homepage": "https://github.com/cotko/mpd-api#readme",
  "keywords": [
    "api",
    "client",
    "daemon",
    "mpd",
    "mpd-api",
    "mpd2",
    "mpdapi",
    "music",
    "player",
    "protocol"
  ],
  "license": "UNLICENSED",
  "main": "lib/index.js",
  "name": "mpd-api",
  "optionalDependencies": {},
  "readme": "## node mpd client api\n\n\nApi implementation for [Music Player Daemon](https://musicpd.org) ([GIT](https://github.com/MusicPlayerDaemon/MPD)) protocol.\n\nWraps the MPD client from [mpd2 module](https://github.com/cotko/mpd.js) with api methods exposed as *client.api*.`x`\n\n\n### Usage\n\n  ```\n  npm i / yarn add mpd-api\n  ```\n\n  ```js\n\n  const mpdapi = require('mpd-api')\n\n  // config is passed to net.connect()\n  const config = {\n    host: 'localhost',\n    port: 6600,\n\n    // if connecting to a local socket rather than\n    // host and port; trailing `~` is replaced by\n    // `os.homedir()`\n    // path: '~/.config/mpd/socket'\n\n    // if MPD requires a password, pass\n    // it within the config as well:\n    //password: 'password'\n  }\n\n  const client = await mpdapi.connect(config)\n\n  const songs = await client.api.db.search('(artist contains \"Empire\")')\n  // [{\n  //   file: 'mpd/music/path//Sleep Wont Sleep - The Cat Empire (2013).m4a',\n  //   last_modified: '2019-04-05T14:59:00Z',\n  //   format: '44100:f:2',\n  //   time: 284,\n  //   duration: 284.375,\n  //   artist: 'The Cat Empire',\n  //   album: 'Steal the Light',\n  //   title: \"Sleep Won't Sleep\",\n  //   track: 10,\n  //   date: '2013-05-17',\n  //   disc: 1,\n  //   label: 'EMI',\n  //   albumartist: 'The Cat Empire',\n  //   musicbrainz_artistid: 'a530492f-8806-4bd7-9c14-80c237eb92fe',\n  //   musicbrainz_albumid: 'aa62c3b7-2576-4375-9301-ed8824966752',\n  //   musicbrainz_albumartistid: 'a530492f-8806-4bd7-9c14-80c237eb92fe',\n  //   musicbrainz_trackid: 'b0261a37-8a91-4581-8eab-4c5069d057ea',\n  //   musicbrainz_releasetrackid: '56f73f38-c224-4827-a7a2-4552990c5da9'\n  //  }, {\n  //   file: ...\n  //  }, ...]\n\n  const status = await client.api.status.get()\n  // { volume: 63,\n  // repeat: false,\n  // random: false,\n  // single: false,\n  // consume: false,\n  // playlist: 312,\n  // playlistlength: 12,\n  // mixrampdb: 0,\n  // state: 'play',\n  // song: 7,\n  // songid: 116,\n  // time: { elapsed: 10562, total: 0 },\n  // elapsed: 10561.648,\n  // bitrate: '96',\n  // audio:\n  //  { sampleRate: 44100,\n  //    bits: 24,\n  //    channels: 2,\n  //    sample_rate_short: { value: 44.1, unit: 'kHz' } },\n  // nextsong: 8,\n  // nextsongid: 117 }\n\n\n  ```\n\n  All methods return already parsed results.\n\n  Reference to [mpd2](https://github.com/cotko/mpd.js) module is exposed as well, if needed:\n\n  ```js\n  const { mpd } = mpdapi\n  const { cmd, MPDError } = mpd\n\n  try {\n    client = await mpdapi.connect()\n  } catch (e) {\n    if (e.errno === MPDError.CODES.PERMISSION) {\n      console.log('no permission to connect, probably invalid/missing password')\n    }\n  }\n\n  // or disable parsing of values\n  mpd.autoparseValues(false)\n\n  // and do not convert object keys to snake_case\n  mpd.normalizeKeys(false)\n\n  ```\n\n#### typescript\n\n  ```typescript\n  // typings included\n\n  import api, { MPDApi } from 'mpd-api'\n\n  type Status = {\n    volume: number\n    repeat: boolean\n    playlist: number\n    state: 'play' | 'stop' | 'pause'\n    // ...\n  }\n\n  type ListAllInfo = {\n    directory: string\n    last_modified: string\n    file?: File[]\n  }\n\n  type File = {\n    file: string\n    last_modified: string\n    format: string\n    time: number\n    artist: string\n    title: string\n    // ...\n  }\n\n  const client: MPDApi.ClientAPI = await api.connect()\n\n  const status = await client.api.status.get<Status>()\n  console.log('state:', status.state)\n\n  const lsAll = await client.api.db.listallinfo<ListAllInfo>()\n  console.log('first directory: %s, files: %o', lsAll[0].directory, lsAll[0].file)\n\n\n  // reference to mpd2 module:\n  api.mpd.normalizeKeys(false)\n\n  ```\n\n\n\n\n\n\n### API\n\n\n\n#####  Client to client communication [MPD documentation](https://www.musicpd.org/doc/html/protocol.html#client-to-client)\n\n\n<tt>async c2c.<b>list</b>(...args)</tt> --> <tt>channels ...args</tt>\n\n<details>\n<summary><tt>async c2c.<b>subscribe</b>(...args)</tt> --> <tt>subscribe ...args</tt></summary>\n<p>\n\nmethod ignores <b>EXIST</b>, expect *undefined* in this case   \n    \n</p>\n</details>\n\n<details>\n<summary><tt>async c2c.<b>unsubscribe</b>(...args)</tt> --> <tt>unsubscribe ...args</tt></summary>\n<p>\n\nmethod ignores <b>NO_EXIST</b>, expect *undefined* in this case   \n    \n</p>\n</details>\n\n<tt>async c2c.<b>sendMessage</b>(...args)</tt> --> <tt>sendmessage ...args</tt>\n\n<tt>async c2c.<b>readMessages</b>(...args)</tt> --> <tt>readmessages ...args</tt>\n\n\n\n#####  Connection settings [MPD documentation](https://www.musicpd.org/doc/html/protocol.html#connection-settings)\n\n\n<tt>async connection.<b>close</b>(...args)</tt> --> <tt>close ...args</tt>\n\n<tt>async connection.<b>kill</b>(...args)</tt> --> <tt>kill ...args</tt>\n\n<tt>async connection.<b>ping</b>(...args)</tt> --> <tt>ping ...args</tt>\n\n<tt>async connection.<b>getTagTypes</b>(...args)</tt> --> <tt>tagtypes ...args</tt>\n\n<details>\n<summary><tt>async connection.<b>enableTagTypes</b>(...args)</tt> --> <tt>tagtypes <em>enable</em>, ...args</tt></summary>\n<p>\n\nmethod binds arguments which can not be changed\n\n</p>\n</details>\n\n<details>\n<summary><tt>async connection.<b>disableTagTypes</b>(...args)</tt> --> <tt>tagtypes <em>disable</em>, ...args</tt></summary>\n<p>\n\nmethod binds arguments which can not be changed\n\n</p>\n</details>\n\n<details>\n<summary><tt>async connection.<b>clearTagTypes</b>(...args)</tt> --> <tt>tagtypes <em>clear</em>, ...args</tt></summary>\n<p>\n\nmethod binds arguments which can not be changed\n\n</p>\n</details>\n\n<details>\n<summary><tt>async connection.<b>enableAllTagTypes</b>(...args)</tt> --> <tt>tagtypes <em>all</em>, ...args</tt></summary>\n<p>\n\nmethod binds arguments which can not be changed\n\n</p>\n</details>\n\n<tt>async connection.<b>binarylimit</b>(...args)</tt> --> <tt>binarylimit ...args</tt>\n\n\n\n#####  The music database [MPD documentation](https://www.musicpd.org/doc/html/protocol.html#the-music-database)\n\n\n<tt>async db.<b>listall</b>(...args)</tt> --> <tt>listall ...args</tt>\n\n<tt>async db.<b>listallinfo</b>(...args)</tt> --> <tt>listallinfo ...args</tt>\n\n<details>\n<summary><tt>async db.<b>list</b>(...args)</tt> --> <tt>list ...args</tt></summary>\n<p>\n\nmethod reorderes or augments passed arguments, see <a href=\"lib/api/mutate/argument.js#L8\">dbList</a>\n\n</p>\n</details>\n\n<tt>async db.<b>count</b>(...args)</tt> --> <tt>count ...args</tt>\n\n<tt>async db.<b>find</b>(...args)</tt> --> <tt>find ...args</tt>\n\n<tt>async db.<b>findadd</b>(...args)</tt> --> <tt>findadd ...args</tt>\n\n<tt>async db.<b>search</b>(...args)</tt> --> <tt>search ...args</tt>\n\n<tt>async db.<b>searchadd</b>(...args)</tt> --> <tt>searchadd ...args</tt>\n\n<tt>async db.<b>searchaddpl</b>(...args)</tt> --> <tt>searchaddpl ...args</tt>\n\n<tt>async db.<b>lsinfo</b>(...args)</tt> --> <tt>lsinfo ...args</tt>\n\n<tt>async db.<b>songinfo</b>(...args)</tt> --> <tt>lsinfo ...args</tt>\n\n<tt>async db.<b>listfiles</b>(...args)</tt> --> <tt>listfiles ...args</tt>\n\n<tt>async db.<b>readcomments</b>(...args)</tt> --> <tt>readcomments ...args</tt>\n\n<tt>async db.<b>rescan</b>(...args)</tt> --> <tt>rescan ...args</tt>\n\n<tt>async db.<b>update</b>(...args)</tt> --> <tt>update ...args</tt>\n\n<tt>async db.<b>getfingerprint</b>(...args)</tt> --> <tt>getfingerprint ...args</tt>\n\n<details>\n<summary><tt>async db.<b>albumart</b>(...args)</tt> --> <tt><a href=\"lib/api/mutate/method.js#L128\">albumart</a></tt></summary>\n<p>\n\nmethod ignores <b>NO_EXIST</b>, expect *undefined* in this case   \n    \n</p>\n</details>\n\n<details>\n<summary><tt>async db.<b>albumartWhole</b>(...args)</tt> --> <tt><a href=\"lib/api/mutate/method.js#L129\">albumartWhole</a></tt></summary>\n<p>\n\nmethod ignores <b>NO_EXIST</b>, expect *undefined* in this case   \n    \n</p>\n</details>\n\n<details>\n<summary><tt>async db.<b>readpicture</b>(...args)</tt> --> <tt><a href=\"lib/api/mutate/method.js#L131\">readpicture</a></tt></summary>\n<p>\n\nmethod ignores <b>NO_EXIST</b>, expect *undefined* in this case   \n    \n</p>\n</details>\n\n<details>\n<summary><tt>async db.<b>readpictureWhole</b>(...args)</tt> --> <tt><a href=\"lib/api/mutate/method.js#L132\">readpictureWhole</a></tt></summary>\n<p>\n\nmethod ignores <b>NO_EXIST</b>, expect *undefined* in this case   \n    \n</p>\n</details>\n\n\n\n#####  Mounts and neighbors [MPD documentation](https://www.musicpd.org/doc/html/protocol.html#mounts-and-neighbors)\n\n\n<tt>async mounts.<b>list</b>(...args)</tt> --> <tt>listmounts ...args</tt>\n\n<tt>async mounts.<b>listNeighbors</b>(...args)</tt> --> <tt>listneighbors ...args</tt>\n\n<tt>async mounts.<b>mount</b>(...args)</tt> --> <tt>mount ...args</tt>\n\n<tt>async mounts.<b>unmount</b>(...args)</tt> --> <tt>unmount ...args</tt>\n\n\n\n#####  Audio output devices [MPD documentation](https://www.musicpd.org/doc/html/protocol.html#audio-output-devices)\n\n\n<tt>async outputs.<b>list</b>(...args)</tt> --> <tt>outputs ...args</tt>\n\n<tt>async outputs.<b>enable</b>(...args)</tt> --> <tt>enableoutput ...args</tt>\n\n<tt>async outputs.<b>disable</b>(...args)</tt> --> <tt>disableoutput ...args</tt>\n\n<tt>async outputs.<b>toggle</b>(...args)</tt> --> <tt>toggleoutput ...args</tt>\n\n<tt>async outputs.<b>set</b>(...args)</tt> --> <tt>outputset ...args</tt>\n\n\n\n#####  Partition commands [MPD documentation](https://www.musicpd.org/doc/html/protocol.html#partition-commands)\n\n\n<tt>async partition.<b>list</b>(...args)</tt> --> <tt>listpartitions ...args</tt>\n\n<details>\n<summary><tt>async partition.<b>create</b>(...args)</tt> --> <tt>newpartition ...args</tt></summary>\n<p>\n\nmethod ignores <b>EXIST</b>, expect *undefined* in this case   \n    \n</p>\n</details>\n\n<tt>async partition.<b>switchTo</b>(...args)</tt> --> <tt>partition ...args</tt>\n\n<details>\n<summary><tt>async partition.<b>delete</b>(...args)</tt> --> <tt>delpartition ...args</tt></summary>\n<p>\n\nmethod ignores <b>NO_EXIST</b>, expect *undefined* in this case   \n    \n</p>\n</details>\n\n<details>\n<summary><tt>async partition.<b>moveOutputToCurrentPartition</b>(...args)</tt> --> <tt>moveoutput ...args</tt></summary>\n<p>\n\nmethod ignores <b>NO_EXIST</b>, expect *undefined* in this case   \n    \n</p>\n</details>\n\n\n\n#####  Playback options and controls [MPD documentation](https://www.musicpd.org/doc/html/protocol.html#playback-options)\n\n\n<tt>async playback.<b>next</b>(...args)</tt> --> <tt>next ...args</tt>\n\n<tt>async playback.<b>prev</b>(...args)</tt> --> <tt>previous ...args</tt>\n\n<details>\n<summary><tt>async playback.<b>pause</b>(...args)</tt> --> <tt>pause <em>1</em>, ...args</tt></summary>\n<p>\n\nmethod binds arguments which can not be changed\n\n</p>\n</details>\n\n<details>\n<summary><tt>async playback.<b>resume</b>(...args)</tt> --> <tt>pause <em>0</em>, ...args</tt></summary>\n<p>\n\nmethod binds arguments which can not be changed\n\n</p>\n</details>\n\n<tt>async playback.<b>toggle</b>(...args)</tt> --> <tt>pause ...args</tt>\n\n<tt>async playback.<b>play</b>(...args)</tt> --> <tt>play ...args</tt>\n\n<tt>async playback.<b>playid</b>(...args)</tt> --> <tt>playid ...args</tt>\n\n<tt>async playback.<b>stop</b>(...args)</tt> --> <tt>stop ...args</tt>\n\n<tt>async playback.<b>seekcur</b>(...args)</tt> --> <tt>seekcur ...args</tt>\n\n<tt>async playback.<b>seek</b>(...args)</tt> --> <tt>seek ...args</tt>\n\n<tt>async playback.<b>seekid</b>(...args)</tt> --> <tt>seekid ...args</tt>\n\n<tt>async playback.<b>getvol</b>(...args)</tt> --> <tt>getvol ...args</tt>\n\n<details>\n<summary><tt>async playback.<b>consume</b>(...args)</tt> --> <tt>consume ...args</tt></summary>\n<p>\n\nmethod reorderes or augments passed arguments, see <a href=\"lib/api/mutate/argument.js#L3\">boolAt</a>\n\n</p>\n</details>\n\n<tt>async playback.<b>crossfade</b>(...args)</tt> --> <tt>crossfade ...args</tt>\n\n<tt>async playback.<b>mixrampdb</b>(...args)</tt> --> <tt>mixrampdb ...args</tt>\n\n<details>\n<summary><tt>async playback.<b>mixrampdelay</b>(...args)</tt> --> <tt>mixrampdelay ...args</tt></summary>\n<p>\n\nmethod reorderes or augments passed arguments, see <a href=\"lib/api/mutate/argument.js#L71\">mixrampdelay</a>\n\n</p>\n</details>\n\n<details>\n<summary><tt>async playback.<b>random</b>(...args)</tt> --> <tt>random ...args</tt></summary>\n<p>\n\nmethod reorderes or augments passed arguments, see <a href=\"lib/api/mutate/argument.js#L3\">boolAt</a>\n\n</p>\n</details>\n\n<details>\n<summary><tt>async playback.<b>repeat</b>(...args)</tt> --> <tt>repeat ...args</tt></summary>\n<p>\n\nmethod reorderes or augments passed arguments, see <a href=\"lib/api/mutate/argument.js#L3\">boolAt</a>\n\n</p>\n</details>\n\n<details>\n<summary><tt>async playback.<b>single</b>(...args)</tt> --> <tt>single ...args</tt></summary>\n<p>\n\nmethod reorderes or augments passed arguments, see <a href=\"lib/api/mutate/argument.js#L78\">single</a>\n\n</p>\n</details>\n\n<tt>async playback.<b>setvol</b>(...args)</tt> --> <tt>setvol ...args</tt>\n\n<details>\n<summary><tt>async playback.<b>setReplayGain</b>(...args)</tt> --> <tt>replay_gain_mode ...args</tt></summary>\n<p>\n\nmethod reorderes or augments passed arguments, see <a href=\"lib/api/mutate/argument.js#L85\">replaygain</a>\n\n</p>\n</details>\n\n<tt>async playback.<b>getReplayGain</b>(...args)</tt> --> <tt>replay_gain_status ...args</tt>\n\n\n\n#####  Stored playlists [MPD documentation](https://www.musicpd.org/doc/html/protocol.html#stored-playlists)\n\n\n<tt>async playlists.<b>get</b>(...args)</tt> --> <tt>listplaylists ...args</tt>\n\n<tt>async playlists.<b>list</b>(...args)</tt> --> <tt>listplaylist ...args</tt>\n\n<tt>async playlists.<b>listinfo</b>(...args)</tt> --> <tt>listplaylistinfo ...args</tt>\n\n<tt>async playlists.<b>load</b>(...args)</tt> --> <tt>load ...args</tt>\n\n<tt>async playlists.<b>add</b>(...args)</tt> --> <tt>playlistadd ...args</tt>\n\n<tt>async playlists.<b>clear</b>(...args)</tt> --> <tt>playlistclear ...args</tt>\n\n<tt>async playlists.<b>deleteAt</b>(...args)</tt> --> <tt>playlistdelete ...args</tt>\n\n<tt>async playlists.<b>move</b>(...args)</tt> --> <tt>playlistmove ...args</tt>\n\n<tt>async playlists.<b>rename</b>(...args)</tt> --> <tt>rename ...args</tt>\n\n<tt>async playlists.<b>remove</b>(...args)</tt> --> <tt>rm ...args</tt>\n\n<tt>async playlists.<b>save</b>(...args)</tt> --> <tt>save ...args</tt>\n\n\n\n#####  The Queue [MPD documentation](https://www.musicpd.org/doc/html/protocol.html#the-queue)\n\n\n<tt>async queue.<b>add</b>(...args)</tt> --> <tt>add ...args</tt>\n\n<tt>async queue.<b>addid</b>(...args)</tt> --> <tt>addid ...args</tt>\n\n<tt>async queue.<b>clear</b>(...args)</tt> --> <tt>clear ...args</tt>\n\n<tt>async queue.<b>info</b>(...args)</tt> --> <tt>playlistinfo ...args</tt>\n\n<tt>async queue.<b>id</b>(...args)</tt> --> <tt>playlistid ...args</tt>\n\n<tt>async queue.<b>delete</b>(...args)</tt> --> <tt>delete ...args</tt>\n\n<tt>async queue.<b>deleteid</b>(...args)</tt> --> <tt>deleteid ...args</tt>\n\n<tt>async queue.<b>move</b>(...args)</tt> --> <tt>move ...args</tt>\n\n<tt>async queue.<b>moveid</b>(...args)</tt> --> <tt>moveid ...args</tt>\n\n<tt>async queue.<b>find</b>(...args)</tt> --> <tt>playlistfind ...args</tt>\n\n<tt>async queue.<b>search</b>(...args)</tt> --> <tt>playlistsearch ...args</tt>\n\n<tt>async queue.<b>prio</b>(...args)</tt> --> <tt>prio ...args</tt>\n\n<tt>async queue.<b>prioid</b>(...args)</tt> --> <tt>prioid ...args</tt>\n\n<tt>async queue.<b>shuffle</b>(...args)</tt> --> <tt>shuffle ...args</tt>\n\n<tt>async queue.<b>swap</b>(...args)</tt> --> <tt>swap ...args</tt>\n\n<tt>async queue.<b>swapid</b>(...args)</tt> --> <tt>swapid ...args</tt>\n\n<tt>async queue.<b>addtagid</b>(...args)</tt> --> <tt>addtagid ...args</tt>\n\n<tt>async queue.<b>cleartagid</b>(...args)</tt> --> <tt>cleartagid ...args</tt>\n\n<tt>async queue.<b>getChanges</b>(...args)</tt> --> <tt>plchanges ...args</tt>\n\n<tt>async queue.<b>getChangesPosId</b>(...args)</tt> --> <tt>plchangesposid ...args</tt>\n\n<tt>async queue.<b>rangeid</b>(...args)</tt> --> <tt>rangeid ...args</tt>\n\n\n\n#####  Reflection [MPD documentation](https://www.musicpd.org/doc/html/protocol.html#reflection)\n\n\n<tt>async reflection.<b>config</b>(...args)</tt> --> <tt>config ...args</tt>\n\n<tt>async reflection.<b>commands</b>(...args)</tt> --> <tt>commands ...args</tt>\n\n<tt>async reflection.<b>notcommands</b>(...args)</tt> --> <tt>notcommands ...args</tt>\n\n<tt>async reflection.<b>urlhandlers</b>(...args)</tt> --> <tt>urlhandlers ...args</tt>\n\n<tt>async reflection.<b>decoders</b>(...args)</tt> --> <tt>decoders ...args</tt>\n\n\n\n#####  Querying MPD’s status [MPD documentation](https://www.musicpd.org/doc/html/protocol.html#querying-mpd-s-status)\n\n\n<tt>async status.<b>get</b>(...args)</tt> --> <tt>status ...args</tt>\n\n<tt>async status.<b>clearerror</b>(...args)</tt> --> <tt>clearerror ...args</tt>\n\n<tt>async status.<b>currentsong</b>(...args)</tt> --> <tt>currentsong ...args</tt>\n\n<tt>async status.<b>stats</b>(...args)</tt> --> <tt>stats ...args</tt>\n\n\n\n#####  Stickers [MPD documentation](https://www.musicpd.org/doc/html/protocol.html#stickers)\n\n\n<details>\n<summary><tt>async sticker.<b>list</b>(...args)</tt> --> <tt>sticker <em>list, song</em>, ...args</tt></summary>\n<p>\n\nmethod binds arguments which can not be changed\n\n</p>\n</details>\n\n<details>\n<summary><tt>async sticker.<b>set</b>(...args)</tt> --> <tt>sticker <em>set, song</em>, ...args</tt></summary>\n<p>\n\nmethod binds arguments which can not be changed\n\nmethod reorderes or augments passed arguments, see <a href=\"lib/api/mutate/argument.js#L17\">stickerSet</a>\n\n</p>\n</details>\n\n<details>\n<summary><tt>async sticker.<b>get</b>(...args)</tt> --> <tt>sticker <em>get, song</em>, ...args</tt></summary>\n<p>\n\nmethod binds arguments which can not be changed\n\nmethod ignores <b>NO_EXIST</b>, expect *undefined* in this case   \n    \n</p>\n</details>\n\n<details>\n<summary><tt>async sticker.<b>delete</b>(...args)</tt> --> <tt>sticker <em>delete, song</em>, ...args</tt></summary>\n<p>\n\nmethod binds arguments which can not be changed\n\nmethod reorderes or augments passed arguments, see <a href=\"lib/api/mutate/argument.js#L27\">stickerDel</a>\n\nmethod ignores <b>NO_EXIST</b>, expect *undefined* in this case   \n    \n</p>\n</details>\n\n<details>\n<summary><tt>async sticker.<b>deleteAll</b>(...args)</tt> --> <tt>sticker <em>delete, song</em>, ...args</tt></summary>\n<p>\n\nmethod binds arguments which can not be changed\n\nmethod ignores <b>NO_EXIST</b>, expect *undefined* in this case   \n    \n</p>\n</details>\n\n<details>\n<summary><tt>async sticker.<b>find</b>(...args)</tt> --> <tt>sticker <em>find, song</em>, ...args</tt></summary>\n<p>\n\nmethod binds arguments which can not be changed\n\nmethod reorderes or augments passed arguments, see <a href=\"lib/api/mutate/argument.js#L33\">stickerFind</a>\n\n</p>\n</details>\n\n<details>\n<summary><tt>async sticker.<b>search</b>(...args)</tt> --> <tt>sticker <em>find, song</em>, ...args</tt></summary>\n<p>\n\nmethod binds arguments which can not be changed\n\nmethod reorderes or augments passed arguments, see <a href=\"lib/api/mutate/argument.js#L52\">stickerSearch</a>\n\n</p>\n</details>\n\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cotko/mpd-api.git"
  },
  "scripts": {
    "gen-doc": "node ./doc/generatedoc.js --attach",
    "gen-typings": "node ./doc/generatetypings.js --indent=4",
    "lint": "standard lib/**/*.js doc/*.js",
    "lintfix": "standard lib/**/*.js --fix",
    "scanformissingcommands": "node ./doc/scanformissingcmds.js",
    "test": "node ./tests/",
    "todo": "grep -irn --colour -E '#\\s+@method' lib/api/spec/ || echo none missing",
    "todos": "grep -irn -B 1 -A 1 --colour todo lib/ || echo none found"
  },
  "standard": {
    "ignore": []
  },
  "types": "./lib/index.d.ts",
  "version": "1.1.0"
}
