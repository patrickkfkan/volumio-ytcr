{"version":3,"file":"VolumeControl.js","sourceRoot":"","sources":["../../src/lib/VolumeControl.ts"],"names":[],"mappings":";;AAMA,MAAqB,aAAa;IAEhC,cAAc,CAAM;IACpB,OAAO,CAAS;IAChB,cAAc,CAAS;IACvB,4BAA4B,CAAqC;IAEjE,YAAY,aAAkB,EAAE,MAAc;QAC5C,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;IAC3C,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,MAAc,EAAE,eAAe,GAAG,KAAK;QACrD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,2CAA2C,MAAM,GAAG,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE;YACpB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;SAC9C;IACH,CAAC;IAED,KAAK,CAAC,SAAS;QACb,IAAI,MAAuB,CAAC;QAC5B,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE;YAC3B,MAAM,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACvC,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,CAAC,UAAe,EAAE,EAAE;oBACnE,OAAO,CAAC,UAAU,CAAC,GAAa,CAAC,CAAC;gBACpC,CAAC,CAAC;qBACC,IAAI,CAAC,CAAC,KAAU,EAAE,EAAE;oBACnB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,4DAA4D,EAAE,KAAK,CAAC,CAAC;oBACxF,MAAM,CAAC,KAAK,CAAC,CAAC;oBACd,OAAO,CAAC,CAAC,CAAC;gBACZ,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACJ;aACI;YACH,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC/C;QAED,IAAI,CAAC,cAAc,GAAG,MAAM,MAAM,CAAC;QACnC,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,mCAAmC,CAAC,QAAqC;QACvE,IAAI,IAAI,CAAC,4BAA4B,EAAE;YACrC,IAAI,CAAC,qCAAqC,EAAE,CAAC;SAC9C;QACD,IAAI,CAAC,4BAA4B,GAAG,QAAQ,CAAC;QAC7C,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;IACnE,CAAC;IAED,qCAAqC;QACnC,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE;YACtC,OAAO;SACR;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;QACvE,IAAI,SAAS,EAAE;YACb,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC;YAClC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,8FAA8F,QAAQ,EAAE,CAAC,CAAC;YAC7H,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,qBAAqB,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,4BAA4B,CAAC,CAAC;YAC7H,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC,MAAM,CAAC;YAC7E,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,gCAAgC,QAAQ,GAAG,QAAQ,gDAAgD,CAAC,CAAC;SACzH;IACH,CAAC;CACF;AAjED,gCAiEC","sourcesContent":["import { Logger } from 'yt-cast-receiver';\n\ninterface VolumioVolumeChangeListener {\n  (volume: { vol: number }): Promise<void>;\n}\n\nexport default class VolumeControl {\n\n  #commandRouter: any;\n  #logger: Logger;\n  #currentVolume: number;\n  #volumioVolumeChangeListener: VolumioVolumeChangeListener | null;\n\n  constructor(commandRouter: any, logger: Logger) {\n    this.#commandRouter = commandRouter;\n    this.#logger = logger;\n    this.#currentVolume = -1;\n    this.#volumioVolumeChangeListener = null;\n  }\n\n  async setVolume(volume: number, setInternalOnly = false) {\n    this.#logger.debug(`[ytcr] VolumeControl setting volume to: ${volume}.`);\n    this.#currentVolume = volume;\n    if (!setInternalOnly) {\n      this.#commandRouter.volumiosetvolume(volume);\n    }\n  }\n\n  async getVolume(): Promise<number> {\n    let result: Promise<number>;\n    if (this.#currentVolume < 0) {\n      result = new Promise((resolve, reject) => {\n        this.#commandRouter.volumioretrievevolume().then((volumeData: any) => {\n          resolve(volumeData.vol as number);\n        })\n          .fail((error: any) => {\n            this.#logger.error('[ytcr] VolumeControl failed to obtain volume from Volumio:', error);\n            reject(error);\n            return -1;\n          });\n      });\n    }\n    else {\n      result = Promise.resolve(this.#currentVolume);\n    }\n\n    this.#currentVolume = await result;\n    return this.#currentVolume;\n  }\n\n  registerVolumioVolumeChangeListener(listener: VolumioVolumeChangeListener) {\n    if (this.#volumioVolumeChangeListener) {\n      this.unregisterVolumioVolumeChangeListener();\n    }\n    this.#volumioVolumeChangeListener = listener;\n    this.#commandRouter.addCallback('volumioupdatevolume', listener);\n  }\n\n  unregisterVolumioVolumeChangeListener() {\n    if (!this.#volumioVolumeChangeListener) {\n      return;\n    }\n    const callbacks = this.#commandRouter.callbacks['volumioupdatevolume'];\n    if (callbacks) {\n      const oldCount = callbacks.length;\n      this.#logger.debug(`[ytcr] VolumeControl removing Volumio callbacks for ''volumioupdatevolume'. Current count: ${oldCount}`);\n      this.#commandRouter.callbacks['volumioupdatevolume'] = callbacks.filter((l: any) => l !== this.#volumioVolumeChangeListener);\n      const newCount = this.#commandRouter.callbacks['volumioupdatevolume'].length;\n      this.#logger.debug(`[ytcr] VolumeControl removed ${oldCount - newCount} Volumio callbacks for ''volumioupdatevolume'.`);\n    }\n  }\n}\n"]}