{"version":3,"file":"YTCRContext.js","sourceRoot":"","sources":["../../src/lib/YTCRContext.ts"],"names":[],"mappings":"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","sourcesContent":["import format from 'string-format';\nimport fs from 'fs-extra';\n\ninterface DeviceInfo {\n  name: string;\n  uuid: string;\n  time: string;\n}\n\nclass YTCRContext {\n\n  #singletons: Record<string, any>;\n  #data: Record<string, any>;\n  #pluginContext?: any;\n  #pluginConfig?: any;\n\n  #i18n: Record<string, string | Record<string, string>>;\n  #i18nDefaults: Record<string, string | Record<string, string>>;\n  #i18CallbackRegistered: boolean;\n\n  constructor() {\n    this.#singletons = {};\n    this.#data = {};\n    this.#i18n = {};\n    this.#i18nDefaults = {};\n    this.#i18CallbackRegistered = false;\n  }\n\n\n  set(key: string, value: any) {\n    this.#data[key] = value;\n  }\n\n  get(key: string, defaultValue: any = null): any {\n    return (this.#data[key] !== undefined) ? this.#data[key] : defaultValue;\n  }\n\n  init(pluginContext: any, pluginConfig: any) {\n    this.#pluginContext = pluginContext;\n    this.#pluginConfig = pluginConfig;\n\n    this.#loadI18n();\n    if (!this.#i18CallbackRegistered) {\n      this.#pluginContext.coreCommand.sharedVars.registerCallback('language_code', this.#onSystemLanguageChanged.bind(this));\n      this.#i18CallbackRegistered = true;\n    }\n  }\n\n  toast(type: string, message: string, title = 'YouTube Cast Receiver') {\n    this.#pluginContext.coreCommand.pushToastMessage(type, title, message);\n  }\n\n  getDeviceInfo(): DeviceInfo {\n    return this.#pluginContext.coreCommand.getId();\n  }\n\n  getConfigValue(key: string, defaultValue: any = undefined, json = false): any {\n    if (this.#pluginConfig.has(key)) {\n      const val = this.#pluginConfig.get(key);\n      if (json) {\n        try {\n          return JSON.parse(val);\n        }\n        catch (e) {\n          return defaultValue;\n        }\n      }\n      else {\n        return val;\n      }\n    }\n    else {\n      return defaultValue;\n    }\n  }\n\n  setConfigValue(key: string, value: any, json = false) {\n    this.#pluginConfig.set(key, json ? JSON.stringify(value) : value);\n  }\n\n  getMpdPlugin(): any {\n    return this.#getSingleton('mpdPlugin', () => this.#pluginContext.coreCommand.pluginManager.getPlugin('music_service', 'mpd'));\n  }\n\n  getStateMachine(): any {\n    return this.#pluginContext.coreCommand.stateMachine;\n  }\n\n  reset() {\n    this.#pluginContext = null;\n    this.#pluginConfig = null;\n\n    this.#singletons = {};\n    this.#data = {};\n  }\n\n  #getSingleton(key: string, getValue: () => any): any {\n    if (this.#singletons[key] == undefined) {\n      this.#singletons[key] = getValue();\n    }\n    return this.#singletons[key];\n  }\n\n  getI18n(key: string, ...formatValues: any[]): string {\n    let str;\n    if (key.indexOf('.') > 0) {\n      const mainKey = key.split('.')[0];\n      const secKey = key.split('.')[1];\n      str = (this.#i18n[mainKey] as Record<string, string>)?.[secKey] ||\n            (this.#i18nDefaults[mainKey] as Record<string, string>)?.[secKey] ||\n            key;\n    }\n    else {\n      str = (this.#i18n[key] || this.#i18nDefaults[key] || key) as string;\n    }\n\n    if (str && formatValues.length) {\n      str = format(str, ...formatValues);\n    }\n\n    return str;\n  }\n\n  #loadI18n() {\n    if (this.#pluginContext) {\n      const i18nPath = `${__dirname}/../i18n`;\n\n      try {\n        this.#i18nDefaults = fs.readJsonSync(`${i18nPath}/strings_en.json`);\n      }\n      catch (e) {\n        this.#i18nDefaults = {};\n      }\n\n      try {\n        const language_code = this.#pluginContext.coreCommand.sharedVars.get('language_code');\n        this.#i18n = fs.readJsonSync(`${i18nPath}/strings_${language_code}.json`);\n      }\n      catch (e) {\n        this.#i18n = this.#i18nDefaults;\n      }\n    }\n  }\n\n  #onSystemLanguageChanged() {\n    this.#loadI18n();\n  }\n}\n\nexport default new YTCRContext();\n"]}