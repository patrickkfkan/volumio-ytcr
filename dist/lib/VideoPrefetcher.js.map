{"version":3,"file":"VideoPrefetcher.js","sourceRoot":"","sources":["../../src/lib/VideoPrefetcher.ts"],"names":[],"mappings":"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","sourcesContent":["import AbortController from 'abort-controller';\nimport EventEmitter from 'events';\nimport { Logger, Video } from 'yt-cast-receiver';\nimport VideoLoader from './VideoLoader';\n\nexport default class VideoPrefetcher extends EventEmitter {\n\n  #videoLoader: VideoLoader;\n  #startPrefetchTimer: NodeJS.Timeout | null;\n  #prefetchVideoAbortController: AbortController | null;\n  #target: Video | null;\n  #logger: Logger;\n\n  constructor(videoLoader: VideoLoader, logger: Logger) {\n    super();\n    this.#videoLoader = videoLoader;\n    this.#startPrefetchTimer = null;\n    this.#prefetchVideoAbortController = null;\n    this.#target = null;\n    this.#logger = logger;\n  }\n\n  startPrefetchOnTimeout(video: Video, seconds: number) {\n    this.abortPrefetch();\n    this.#startPrefetchTimer = setTimeout(this.#prefetch.bind(this, video), seconds * 1000);\n    this.#target = video;\n    this.#logger.debug(`[ytcr] Going to prefetch ${video.id} in ${seconds}s`);\n  }\n\n  async #prefetch(video: Video) {\n    this.#clearPrefetchTimer();\n    this.#prefetchVideoAbortController = new AbortController();\n    try {\n      this.#logger.debug(`[ytcr] Begin prefetching ${video.id}...`);\n      const videoInfo = await this.#videoLoader.getInfo(video, this.#prefetchVideoAbortController.signal);\n      this.#logger.debug(`[ytcr] Prefetched info for ${video.id}:`, videoInfo);\n      this.emit('prefetch', videoInfo);\n    }\n    catch (error: any) {\n      if (error instanceof Error && error.name === 'AbortError') {\n        this.#logger.debug(`[ytcr] Prefetch aborted for ${video.id}`);\n      }\n      else {\n        this.#logger.error(`[ytcr] Failed to prefetch ${video.id}:`, error);\n      }\n    }\n    finally {\n      this.#prefetchVideoAbortController = null;\n      if (!this.isPending()) {\n        this.#target = null;\n      }\n    }\n  }\n\n  abortPrefetch() {\n    this.#clearPrefetchTimer();\n    if (this.#prefetchVideoAbortController) {\n      this.#prefetchVideoAbortController.abort();\n      this.#prefetchVideoAbortController = null;\n    }\n    this.#target = null;\n  }\n\n  #clearPrefetchTimer() {\n    if (this.#startPrefetchTimer) {\n      clearTimeout(this.#startPrefetchTimer);\n      this.#startPrefetchTimer = null;\n    }\n  }\n\n  isPrefetching(): boolean {\n    return !!this.#prefetchVideoAbortController;\n  }\n\n  isPending(): boolean {\n    return !!this.#startPrefetchTimer;\n  }\n\n  getCurrentTarget(): Video | null {\n    return this.#target;\n  }\n}\n"]}