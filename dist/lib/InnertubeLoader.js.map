{"version":3,"file":"InnertubeLoader.js","sourceRoot":"","sources":["../../src/lib/InnertubeLoader.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AACA,sEAAoC;AACpC,2DAA+F;AAE/F,MAAqB,eAAe;IAKlC,MAAM,CAAC,SAAS,CAAC,MAAc;QAC7B,uBAAA,IAAI,MAAW,MAAM,+BAAA,CAAC;IACxB,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,WAAW;QACtB,IAAI,CAAC,uBAAA,IAAI,4CAAiB,EAAE,CAAC;YAC3B,uBAAA,IAAI,MAAoB,qCAAgB,CAAC,kBAAkB,CAAC;gBAC1D,MAAM,EAAE;oBACN,MAAM,EAAE,wBAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACrC,QAAQ,EAAE,wBAAI,CAAC,cAAc,CAAC,UAAU,CAAC;iBAC1C;gBACD,MAAM,EAAE;oBACN,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,uBAAA,IAAI,mCAAQ,EAAE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;oBAClD,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,uBAAA,IAAI,mCAAQ,EAAE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;oBAClD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,uBAAA,IAAI,mCAAQ,EAAE,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;iBACrD;aACF,CAAC,wCAAA,CAAC;QACL,CAAC;QACD,OAAO,uBAAA,IAAI,4CAAiB,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,UAAkB;QAC7C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1C,OAAO,MAAM,QAAQ,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IACpD,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,KAAK;QAChB,IAAI,uBAAA,IAAI,4CAAiB,EAAE,CAAC;YAC1B,MAAM,QAAQ,GAAG,MAAM,uBAAA,IAAI,4CAAiB,CAAC;YAC7C,MAAM,QAAQ,CAAC,OAAO,EAAE,CAAC;YACzB,uBAAA,IAAI,MAAoB,IAAI,wCAAA,CAAC;QAC/B,CAAC;IACH,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,eAAe;QAC1B,MAAM,MAAM,GAAG,wBAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC7C,MAAM,QAAQ,GAAG,wBAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QACjD,IAAI,uBAAA,IAAI,4CAAiB,EAAE,CAAC;YAC1B,MAAM,QAAQ,GAAG,MAAM,uBAAA,IAAI,4CAAiB,CAAC;YAC7C,QAAQ,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;;;AA5CM,4CAAqD,IAAI,EAAzC,CAA0C;AAC1D,mCAAyB,IAAI,EAAtB,CAAuB;kBAHlB,eAAe","sourcesContent":["import type Logger from './Logger.js';\nimport ytcr from './YTCRContext.js';\nimport { InnertubeFactory, type InnertubeWrapper, type PotFnResult } from 'volumio-yt-support';\n\nexport default class InnertubeLoader {\n\n  static #instancePromise: Promise<InnertubeWrapper> | null = null;\n  static #logger: Logger | null = null;\n\n  static setLogger(logger: Logger) {\n    this.#logger = logger;\n  }\n\n  static async getInstance(): Promise<InnertubeWrapper> {\n    if (!this.#instancePromise) {\n      this.#instancePromise = InnertubeFactory.getWrappedInstance({\n        locale: {\n          region: ytcr.getConfigValue('region'),\n          language: ytcr.getConfigValue('language')\n        },\n        logger: {\n          info: (msg) => this.#logger?.info(`[ytcr] ${msg}`),\n          warn: (msg) => this.#logger?.warn(`[ytcr] ${msg}`),\n          error: (msg) => this.#logger?.error(`[ytcr] ${msg}`),\n        }\n      });\n    }\n    return this.#instancePromise;\n  }\n\n  static async generatePoToken(identifier: string): Promise<PotFnResult> {\n    const instance = await this.getInstance();\n    return await instance.generatePoToken(identifier);\n  }\n\n  static async reset() {\n    if (this.#instancePromise) {\n      const instance = await this.#instancePromise;\n      await instance.dispose();\n      this.#instancePromise = null;\n    }\n  }\n\n  static async applyI18nConfig() {\n    const region = ytcr.getConfigValue('region');\n    const language = ytcr.getConfigValue('language');\n    if (this.#instancePromise) {\n      const instance = await this.#instancePromise;\n      instance.setLocale({ region, language });\n    }\n  }\n}\n"]}